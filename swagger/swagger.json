{
  "swagger" : "2.0",
  "info" : {
    "description" : "GOV.UK Pay Api",
    "version" : "1.0.0",
    "title" : "GOV.UK Pay Api"
  },
  "host" : "publicapi.pymnt.uk",
  "tags" : [ {
    "name" : "refunds",
    "description" : "Public Api Endpoints for Refunds"
  } ],
  "schemes" : [ "https" ],
  "paths" : {
    "/v1/payments" : {
      "get" : {
        "summary" : "Search payments",
        "description" : "Search payments by reference, state, 'from' and 'to' date. The Authorisation token needs to be specified in the 'authorization' header as 'authorization: Bearer YOUR_API_KEY_HERE'",
        "operationId" : "searchPayments",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "reference",
          "in" : "query",
          "description" : "Your payment reference to search",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "state",
          "in" : "query",
          "description" : "State of payments to be searched. Example=success",
          "required" : false,
          "type" : "string",
          "enum" : [ "range[created", "started", "submitted", "success", "failed", "cancelled", "error" ]
        }, {
          "name" : "from_date",
          "in" : "query",
          "description" : "From date of payments to be searched (this date is inclusive). Example=2015-08-13T12:35:00Z",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "to_date",
          "in" : "query",
          "description" : "To date of payments to be searched (this date is exclusive). Example=2015-08-14T12:35:00Z",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "Page number requested for the search, should be a positive integer (optional, defaults to 1)",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "display_size",
          "in" : "query",
          "description" : "Number of results to be shown per page, should be a positive integer (optional, defaults to 500)",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/PaymentSearchResults"
            }
          },
          "401" : {
            "description" : "Credentials are required to access this resource"
          },
          "422" : {
            "description" : "Invalid parameters: from_date, to_date, status. See Public API documentation for the correct data formats",
            "schema" : {
              "$ref" : "#/definitions/Payment Error"
            }
          },
          "500" : {
            "description" : "Downstream system error",
            "schema" : {
              "$ref" : "#/definitions/Payment Error"
            }
          }
        }
      },
      "post" : {
        "summary" : "Create new payment",
        "description" : "Create a new payment for the account associated to the Authorisation token. The Authorisation token needs to be specified in the 'authorization' header as 'authorization: Bearer YOUR_API_KEY_HERE'",
        "operationId" : "newPayment",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "requestPayload",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/CreatePaymentRequest"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "Created",
            "schema" : {
              "$ref" : "#/definitions/PaymentWithAllLinks"
            }
          },
          "400" : {
            "description" : "Bad request",
            "schema" : {
              "$ref" : "#/definitions/Payment Error"
            }
          },
          "401" : {
            "description" : "Credentials are required to access this resource"
          },
          "422" : {
            "description" : "Invalid attribute value: description. Must be less than or equal to 255 characters length",
            "schema" : {
              "$ref" : "#/definitions/Payment Error"
            }
          },
          "500" : {
            "description" : "Downstream system error",
            "schema" : {
              "$ref" : "#/definitions/Payment Error"
            }
          }
        }
      }
    },
    "/v1/payments/{paymentId}" : {
      "get" : {
        "summary" : "Find payment by ID",
        "description" : "Return information about the payment The Authorisation token needs to be specified in the 'authorization' header as 'authorization: Bearer YOUR_API_KEY_HERE'",
        "operationId" : "getPayment",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "paymentId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/PaymentWithAllLinks"
            }
          },
          "401" : {
            "description" : "Credentials are required to access this resource"
          },
          "404" : {
            "description" : "Not found",
            "schema" : {
              "$ref" : "#/definitions/Payment Error"
            }
          },
          "500" : {
            "description" : "Downstream system error",
            "schema" : {
              "$ref" : "#/definitions/Payment Error"
            }
          }
        }
      }
    },
    "/v1/payments/{paymentId}/cancel" : {
      "post" : {
        "summary" : "Cancel payment",
        "description" : "Cancel a payment based on the provided payment ID and the Authorisation token. The Authorisation token needs to be specified in the 'authorization' header as 'authorization: Bearer YOUR_API_KEY_HERE'. A payment can only be cancelled if it's in a state that isn't finished.",
        "operationId" : "cancelPayment",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "paymentId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "204" : {
            "description" : "No Content"
          },
          "400" : {
            "description" : "Cancellation of payment failed",
            "schema" : {
              "$ref" : "#/definitions/Payment Error"
            }
          },
          "401" : {
            "description" : "Credentials are required to access this resource"
          },
          "404" : {
            "description" : "Not found",
            "schema" : {
              "$ref" : "#/definitions/Payment Error"
            }
          },
          "500" : {
            "description" : "Downstream system error",
            "schema" : {
              "$ref" : "#/definitions/Payment Error"
            }
          }
        }
      }
    },
    "/v1/payments/{paymentId}/events" : {
      "get" : {
        "summary" : "Return payment events by ID",
        "description" : "Return payment events information about a certain payment The Authorisation token needs to be specified in the 'authorization' header as 'authorization: Bearer YOUR_API_KEY_HERE'",
        "operationId" : "getPaymentEvents",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "paymentId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/PaymentEventsInformation"
            }
          },
          "401" : {
            "description" : "Credentials are required to access this resource"
          },
          "404" : {
            "description" : "Not found",
            "schema" : {
              "$ref" : "#/definitions/Payment Error"
            }
          },
          "500" : {
            "description" : "Downstream system error",
            "schema" : {
              "$ref" : "#/definitions/Payment Error"
            }
          }
        }
      }
    },
    "/v1/payments/{paymentId}/refunds" : {
      "get" : {
        "tags" : [ "refunds" ],
        "summary" : "Get all refunds for a payment.",
        "description" : "Return refunds for a payment. The Authorisation token needs to be specified in the 'authorization' header as 'authorization: Bearer YOUR_API_KEY_HERE'",
        "operationId" : "getRefunds",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "paymentId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "401" : {
            "description" : "Credentials are required to access this resource"
          },
          "404" : {
            "description" : "Not found",
            "schema" : {
              "$ref" : "#/definitions/Payment Error"
            }
          },
          "500" : {
            "description" : "Downstream system error",
            "schema" : {
              "$ref" : "#/definitions/Payment Error"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "refunds" ],
        "summary" : "Submit a refund for a payment",
        "description" : "Return issued refund information. The Authorisation token needs to be specified in the 'authorization' header as 'authorization: Bearer YOUR_API_KEY_HERE'",
        "operationId" : "submitRefund",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "paymentId",
          "in" : "path",
          "description" : "paymentId",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "requestPayload",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/CreatePaymentRefundRequest"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "ACCEPTED"
          },
          "401" : {
            "description" : "Credentials are required to access this resource"
          },
          "404" : {
            "description" : "Not found",
            "schema" : {
              "$ref" : "#/definitions/Payment Error"
            }
          },
          "500" : {
            "description" : "Downstream system error",
            "schema" : {
              "$ref" : "#/definitions/Payment Error"
            }
          }
        }
      }
    },
    "/v1/payments/{paymentId}/refunds/{refundId}" : {
      "get" : {
        "tags" : [ "refunds" ],
        "summary" : "Find payment refund by ID",
        "description" : "Return payment refund information by Refund ID The Authorisation token needs to be specified in the 'authorization' header as 'authorization: Bearer YOUR_API_KEY_HERE'",
        "operationId" : "getRefundById",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "paymentId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "refundId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "401" : {
            "description" : "Credentials are required to access this resource"
          },
          "404" : {
            "description" : "Not found",
            "schema" : {
              "$ref" : "#/definitions/Payment Error"
            }
          },
          "500" : {
            "description" : "Downstream system error",
            "schema" : {
              "$ref" : "#/definitions/Payment Error"
            }
          }
        }
      }
    }
  },
  "definitions" : {
    "CreatePaymentRefundRequest" : {
      "type" : "object",
      "required" : [ "amount" ],
      "properties" : {
        "amount" : {
          "type" : "integer",
          "format" : "int32",
          "example" : "150000",
          "description" : "Amount in pence. Can't be more than the available amount for refunds",
          "minimum" : 1.0,
          "maximum" : 1.0E7
        }
      },
      "description" : "The Payment Refund Request Payload"
    },
    "CreatePaymentRequest" : {
      "type" : "object",
      "required" : [ "amount", "description", "reference", "return_url" ],
      "properties" : {
        "amount" : {
          "type" : "integer",
          "format" : "int32",
          "example" : "12000",
          "description" : "amount in pence",
          "minimum" : 1.0,
          "maximum" : 1.0E7
        },
        "reference" : {
          "type" : "string",
          "example" : "12345",
          "description" : "payment reference"
        },
        "description" : {
          "type" : "string",
          "example" : "New passport application",
          "description" : "payment description"
        },
        "return_url" : {
          "type" : "string",
          "example" : "https://service-name.gov.uk/transactions/12345",
          "description" : "service return url",
          "readOnly" : true
        }
      },
      "description" : "The Payment Request Payload"
    },
    "Payment Error" : {
      "type" : "object",
      "properties" : {
        "field" : {
          "type" : "string",
          "example" : "amount"
        },
        "code" : {
          "type" : "string",
          "example" : "P0102"
        },
        "description" : {
          "type" : "string",
          "example" : "Invalid attribute value: amount. Must be less than or equal to 10000000"
        }
      },
      "description" : "A Payment Error response"
    },
    "Payment Event information" : {
      "type" : "object",
      "properties" : {
        "payment_id" : {
          "type" : "string",
          "example" : "hu20sqlact5260q2nanm0q8u93",
          "readOnly" : true
        },
        "state" : {
          "description" : "state",
          "readOnly" : true,
          "$ref" : "#/definitions/Payment state"
        },
        "updated" : {
          "type" : "string",
          "example" : "updated_date",
          "description" : "updated",
          "readOnly" : true
        },
        "_links" : {
          "readOnly" : true,
          "$ref" : "#/definitions/payment-event-link"
        }
      },
      "description" : "A List of Payment Events information"
    },
    "Payment state" : {
      "type" : "object",
      "required" : [ "code", "finished", "message", "status" ],
      "properties" : {
        "status" : {
          "type" : "string",
          "example" : "created",
          "description" : "Current progress of the payment in its lifecycle",
          "readOnly" : true
        },
        "finished" : {
          "type" : "boolean",
          "description" : "Whether the payment has finished",
          "readOnly" : true,
          "default" : false
        },
        "message" : {
          "type" : "string",
          "example" : "User cancelled the payment",
          "description" : "What went wrong with the Payment if it finished with an error - English message",
          "readOnly" : true
        },
        "code" : {
          "type" : "string",
          "example" : "P010",
          "description" : "What went wrong with the Payment if it finished with an error - error code",
          "readOnly" : true
        }
      },
      "description" : "A structure representing the current state of the payment in its lifecycle."
    },
    "PaymentEventsInformation" : {
      "type" : "object",
      "properties" : {
        "events" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Payment Event information"
          }
        },
        "payment_id" : {
          "type" : "string",
          "example" : "hu20sqlact5260q2nanm0q8u93",
          "readOnly" : true
        },
        "_links" : {
          "$ref" : "#/definitions/linksForEvents"
        }
      },
      "description" : "A List of Payment Events information"
    },
    "PaymentForSearchResult" : {
      "type" : "object",
      "properties" : {
        "amount" : {
          "type" : "integer",
          "format" : "int64",
          "example" : "1200"
        },
        "state" : {
          "$ref" : "#/definitions/Payment state"
        },
        "description" : {
          "type" : "string",
          "example" : "Your Service Description"
        },
        "reference" : {
          "type" : "string",
          "example" : "your-reference"
        },
        "payment_id" : {
          "type" : "string",
          "example" : "hu20sqlact5260q2nanm0q8u93",
          "readOnly" : true
        },
        "payment_provider" : {
          "type" : "string",
          "example" : "worldpay",
          "readOnly" : true
        },
        "return_url" : {
          "type" : "string",
          "example" : "http://your.service.domain/your-reference",
          "readOnly" : true
        },
        "created_date" : {
          "type" : "string",
          "example" : "2016-01-21T17:15:00Z",
          "readOnly" : true
        },
        "refund_summary" : {
          "readOnly" : true,
          "$ref" : "#/definitions/Refund Summary"
        },
        "_links" : {
          "readOnly" : true,
          "$ref" : "#/definitions/linksForSearchResults"
        }
      }
    },
    "PaymentSearchResults" : {
      "type" : "object",
      "properties" : {
        "results" : {
          "type" : "array",
          "readOnly" : true,
          "items" : {
            "$ref" : "#/definitions/PaymentForSearchResult"
          }
        }
      }
    },
    "PaymentWithAllLinks" : {
      "type" : "object",
      "properties" : {
        "amount" : {
          "type" : "integer",
          "format" : "int64",
          "example" : "1200"
        },
        "state" : {
          "$ref" : "#/definitions/Payment state"
        },
        "description" : {
          "type" : "string",
          "example" : "Your Service Description"
        },
        "reference" : {
          "type" : "string",
          "example" : "your-reference"
        },
        "payment_id" : {
          "type" : "string",
          "example" : "hu20sqlact5260q2nanm0q8u93",
          "readOnly" : true
        },
        "payment_provider" : {
          "type" : "string",
          "example" : "worldpay",
          "readOnly" : true
        },
        "return_url" : {
          "type" : "string",
          "example" : "http://your.service.domain/your-reference",
          "readOnly" : true
        },
        "created_date" : {
          "type" : "string",
          "example" : "2016-01-21T17:15:00Z",
          "readOnly" : true
        },
        "refund_summary" : {
          "readOnly" : true,
          "$ref" : "#/definitions/Refund Summary"
        },
        "_links" : {
          "readOnly" : true,
          "$ref" : "#/definitions/allLinksForAPayment"
        }
      }
    },
    "Refund Summary" : {
      "type" : "object",
      "properties" : {
        "status" : {
          "type" : "string",
          "example" : "available",
          "description" : "Availability status of the refund"
        },
        "amount_available" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Amount available for refund in pence",
          "readOnly" : true
        },
        "amount_submitted" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Amount submitted for refunds on this Payment in pence",
          "readOnly" : true
        }
      },
      "description" : "A structure representing the refunds availability"
    },
    "allLinksForAPayment" : {
      "type" : "object",
      "properties" : {
        "self" : {
          "description" : "self",
          "readOnly" : true,
          "$ref" : "#/definitions/paymentLink"
        },
        "next_url" : {
          "description" : "next_url",
          "readOnly" : true,
          "$ref" : "#/definitions/paymentLink"
        },
        "next_url_post" : {
          "description" : "next_url_post",
          "readOnly" : true,
          "$ref" : "#/definitions/paymentPOSTLink"
        },
        "events" : {
          "description" : "events",
          "readOnly" : true,
          "$ref" : "#/definitions/paymentLink"
        },
        "refunds" : {
          "description" : "refunds",
          "readOnly" : true,
          "$ref" : "#/definitions/paymentLink"
        },
        "cancel" : {
          "description" : "cancel",
          "readOnly" : true,
          "$ref" : "#/definitions/paymentPOSTLink"
        }
      },
      "description" : "self,events and next links of a Payment"
    },
    "linksForEvents" : {
      "type" : "object",
      "properties" : {
        "self" : {
          "description" : "self",
          "readOnly" : true,
          "$ref" : "#/definitions/paymentLink"
        }
      },
      "description" : "links for events resource"
    },
    "linksForSearchResults" : {
      "type" : "object",
      "properties" : {
        "self" : {
          "description" : "self",
          "readOnly" : true,
          "$ref" : "#/definitions/paymentLink"
        },
        "cancel" : {
          "description" : "cancel",
          "readOnly" : true,
          "$ref" : "#/definitions/paymentPOSTLink"
        },
        "events" : {
          "description" : "events",
          "readOnly" : true,
          "$ref" : "#/definitions/paymentLink"
        },
        "refunds" : {
          "description" : "refunds",
          "readOnly" : true,
          "$ref" : "#/definitions/paymentLink"
        }
      },
      "description" : "links for search payment resource"
    },
    "payment-event-link" : {
      "type" : "object",
      "properties" : {
        "payment_url" : {
          "description" : "payment_url",
          "readOnly" : true,
          "$ref" : "#/definitions/paymentLink"
        }
      },
      "description" : "Resource link for a payment of a payment event"
    },
    "paymentLink" : {
      "type" : "object",
      "properties" : {
        "href" : {
          "type" : "string",
          "example" : "https://an.example.link/from/payment/platform",
          "readOnly" : true
        },
        "method" : {
          "type" : "string",
          "example" : "GET",
          "readOnly" : true
        }
      },
      "description" : "A link related to a payment"
    },
    "paymentPOSTLink" : {
      "type" : "object",
      "properties" : {
        "type" : {
          "type" : "string",
          "example" : "multipart/form-data"
        },
        "params" : {
          "type" : "object",
          "example" : "\"description\":\"This is a value for a parameter called description\"",
          "additionalProperties" : {
            "type" : "object"
          }
        },
        "href" : {
          "type" : "string",
          "example" : "https://an.example.link/from/payment/platform",
          "readOnly" : true
        },
        "method" : {
          "type" : "string",
          "example" : "POST",
          "readOnly" : true
        }
      },
      "description" : "A POST link related to a payment"
    }
  }
}